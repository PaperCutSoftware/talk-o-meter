rules:
  ## Custom settings of `base.yml`
  ## Comment out all the recommended rules with '#'
  ## Possible Errors
  for-direction: error
  no-await-in-loop: error
  no-compare-neg-zero: error
  #no-cond-assign: error
  #no-console: error
  #no-constant-condition: error
  #no-control-regex: error
  #no-debugger: error
  #no-dupe-args: error
  #no-dupe-keys: error
  #no-duplicate-case: error
  #no-empty: error
  #no-empty-character-class: error
  #no-ex-assign: error
  #no-extra-boolean-cast: error
  no-extra-parens: [error, all, {ignoreJSX: multi-line}]
  #no-extra-semi: error
  #no-func-assign: error
  #no-inner-declarations: error
  #no-invalid-regexp: error
  #no-irregular-whitespace: error
  #no-obj-calls: error
  no-prototype-builtins: off
  #no-regex-spaces: error
  #no-sparse-arrays: error
  no-template-curly-in-string: error
  #no-unexpected-multiline: error
  #no-unreachable: error
  #no-unsafe-finally: error
  no-unsafe-negation: error
  #use-isnan: error
  valid-jsdoc: off
  #valid-typeof: error
  ## Best Practices
  accessor-pairs: off
  array-callback-return: error
  block-scoped-var: error
  class-methods-use-this: error
  complexity: off
  consistent-return: error
  curly: [error, all]
  default-case: error
  dot-location: [error, property]
  dot-notation: [error, {allowKeywords: true, allowPattern: '^[a-z]+(_[a-z]+)+$'}]
  eqeqeq: error
  guard-for-in: error
  no-alert: error
  no-caller: error
  #no-case-declarations: error
  no-div-regex: off
  no-else-return: error
  no-empty-function: [error, {allow: [arrowFunctions, functions, methods]}]
  #no-empty-pattern: error
  no-eq-null: off
  no-eval: error
  no-extend-native: error
  no-extra-bind: error
  no-extra-label: off
  #no-fallthrough: error
  no-floating-decimal: error
  no-global-assign: error
  no-implicit-coercion: off
  no-implicit-globals: off
  no-implied-eval: error
  no-invalid-this: off
  no-iterator: error
  no-labels: error
  no-lone-blocks: error
  no-loop-func: error
  no-magic-numbers: off
  no-multi-spaces: error
  no-multi-str: error
  no-new: error
  no-new-func: error
  no-new-wrappers: error
  #no-octal: error
  no-octal-escape: error
  no-param-reassign: error
  no-proto: error
  #no-redeclare: error
  no-return-assign: error
  no-return-await: error
  no-script-url: error
  #no-self-assign: error
  no-self-compare: error
  no-sequences: error
  no-throw-literal: error
  no-unmodified-loop-condition: off
  no-unused-expressions: error
  #no-unused-labels: error
  no-useless-call: off
  no-useless-concat: error
  no-useless-escape: error
  no-useless-return: error
  no-void: off
  no-warning-comments: off
  no-with: error
  prefer-promise-reject-errors: [error, {allowEmptyReject: true}]
  radix: error
  require-await: error
  vars-on-top: error
  wrap-iife: [error, outside]
  yoda: error
  ## Strict Mode
  strict: off
  ## Variables
  init-declarations: off
  no-catch-shadow: off
  #no-delete-var: error
  no-label-var: error
  no-restricted-globals: off
  no-shadow: error
  no-shadow-restricted-names: error
  #no-undef: error
  no-undef-init: error
  no-undefined: off
  #no-unused-vars: error
  no-use-before-define: error
  ## Node.js and CommonJS
  callback-return: off
  global-require: error
  handle-callback-err: [error, '^.*(e|E)rr(or)?$']
  no-buffer-constructor: error
  no-mixed-requires: off
  no-new-require: off
  no-path-concat: off
  no-process-env: error
  no-process-exit: off
  no-restricted-modules: off
  no-restricted-properties: off
  no-sync: off
  ## Stylistic Issues
  array-bracket-newline: [error, {multiline: true}]
  array-bracket-spacing: error
  array-element-newline: [error, {multiline: true}]
  block-spacing: [error, never]
  brace-style: error
  camelcase: error
  capitalized-comments: off
  comma-spacing: error
#  comma-dangle: [error, never]
  comma-style: off
  computed-property-spacing: error
  consistent-this: off
  eol-last: error
  func-call-spacing: error
  func-name-matching: error
  func-names: off
  func-style: off
  id-blacklist: off
  id-length: off
  id-match: off
  indent: [error, 4, {VariableDeclarator: {var: 2, let: 2, const: 3}}]
  jsx-quotes: off
  key-spacing: error
  keyword-spacing: error
  line-comment-position: error
  linebreak-style: off
  lines-around-comment: [error, {allowBlockStart: true}]
  max-depth: off
  max-len: off
  max-lines: off
  max-nested-callbacks: off
  max-params: off
  max-statements-per-line: off
  max-statements: off
  multiline-ternary: off
  new-cap: error
  new-parens: error
  newline-per-chained-call: off
  no-array-constructor: error
  no-bitwise: off
  no-continue: off
  no-inline-comments: error
  no-lonely-if: off
  no-mixed-operators: off
  #no-mixed-spaces-and-tabs: error
  no-multi-assign: error
  no-multiple-empty-lines: [error, {max: 2, maxEOF: 1}]
  no-negated-condition: off
  no-nested-ternary: error
  no-new-object: error
  no-plusplus: off
  no-restricted-syntax: off
  no-tabs: off
  no-ternary: off
  no-trailing-spaces: error
  no-underscore-dangle: [error, {allowAfterThis: true}]
  no-unneeded-ternary: error
  no-whitespace-before-property: error
  nonblock-statement-body-position: error
  object-curly-newline: [error, {consistent: true}]
  object-curly-spacing: [error, always, {arraysInObjects: false, objectsInObjects: false}]
  object-property-newline: off
  one-var: off
  one-var-declaration-per-line: off
  operator-assignment: off
  operator-linebreak: off
  padded-blocks: [error, never]
  padding-line-between-statements: [error,
                                    {blankLine: always, prev: import, next: "*"},
                                    {blankLine: any, prev: import, next: import},
                                    {blankLine: always, prev: directive, next: "*"},
                                    {blankLine: any, prev: directive, next: directive},
                                    {blankLine: always, prev: "*", next: return},
                                    {blankLine: always, prev: [const, let], next: "*"},
                                    {blankLine: any, prev: [const, let], next: [const, let]},
  ]
  quote-props: off
  quotes: [error, single, {avoidEscape: true}]
  require-jsdoc: off
  semi: [error, always]
  semi-spacing: error
  semi-style: error
  sort-keys: off
  sort-vars: off
  space-before-blocks: error
  space-before-function-paren: [error, {anonymous: always, named: never}]
  space-in-parens: error
  space-infix-ops: error
  space-unary-ops: error
  spaced-comment: error
  switch-colon-spacing: error
  template-tag-spacing: [error, always]
  unicode-bom: error
  wrap-regex: off
  ## ECMAScript 6
  arrow-body-style: error
  arrow-parens: [error, as-needed, {requireForBlockBody: true}]
  arrow-spacing: error
  #constructor-super: error
  generator-star-spacing: [error, before]
  #no-class-assign: error
  no-confusing-arrow: [error, {allowParens: true}]
  #no-const-assign: error
  #no-dupe-class-members: error
  no-duplicate-imports: error
  #no-new-symbol: error
  no-restricted-imports: off
  #no-this-before-super: error
  no-useless-computed-key: error
  no-useless-constructor: error
  no-useless-rename: off
  no-var: error
  object-shorthand: [error, always, {avoidQuotes: true}]
  prefer-arrow-callback: error
  prefer-const: [error, {ignoreReadBeforeAssign: true}]
  prefer-destructuring: error
  prefer-numeric-literals: error
  prefer-reflect: off
  prefer-rest-params: error
  prefer-spread: error
  prefer-template: error
  #require-yield: error
  rest-spread-spacing: error
  sort-imports: off
  symbol-description: off
  template-curly-spacing: error
  yield-star-spacing: [error, before]
